version: "3.8"
services:
  nginx:
    image: ghcr.io/linuxserver/nginx
    container_name: nginx
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERCONFDIR}/nginx:/config
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
  mariadb:
    image: ghcr.io/linuxserver/mariadb
    container_name: mariadb
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TZ}
      - MYSQL_DATABASE=${MYSQL_DATABASE} #optional
      - MYSQL_USER=${MYSQL_USER} #optional
      - MYSQL_PASSWORD=${MYSQL_PASSWORD} #optional
    volumes:
      - ${DOCKERCONFDIR}/mariadb:/config
    ports:
      - 3306:3306
    restart: unless-stopped
  nextcloud:
    image: ghcr.io/linuxserver/nextcloud
    container_name: nextcloud
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERCONFDIR}/nextcloud:/config
      - ${NEXTCLOUD_MOUNT}:/data
    ports:
      - 444:444
    restart: unless-stopped
  sabnzbd:
    image: ghcr.io/linuxserver/sabnzbd
    container_name: sabnzbd
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERCONFDIR}/sabnzbd:/config
      - ${DOWNLOADSDIR}:/downloads
      - ${DOWNLOADSDIR}/incomplete:/incomplete-downloads
    ports:
      - 8080:8080
      - 9090:9090
    restart: unless-stopped
  netdata:
    cap_add:
      - SYS_PTRACE
    container_name: netdata
    environment:
      - PGID=${DOCKERGID}
      - TZ=${TZ}
    hostname: ${DOCKERHOSTNAME}
    image: netdata/netdata
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    ports:
      - ${NETDATA_PORT_19999}:19999
    restart: unless-stopped
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DOCKERCONFDIR}/netdata:/etc/netdata
  ombi:
    container_name: ombi
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    hostname: ${DOCKERHOSTNAME}
    image: ghcr.io/linuxserver/ombi
    ports:
      - ${OMBI_PORT_3579}:3579
    restart: unless-stopped
    volumes:
      - ${DOCKERCONFDIR}/ombi:/config
  plex:
    container_name: plex
    network_mode: ${PLEX_NETWORK_MODE}
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - VERSION=${PLEX_VERSION}
    hostname: ${DOCKERHOSTNAME}
    image: ghcr.io/linuxserver/plex
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: unless-stopped
    volumes:
      - ${DOCKERCONFDIR}/plex:/config
      - ${MOVIESDIR}:/movies
      - ${TVDIR}:/tv
      - ${PLEX_TRANSCODEDIR}:/transcode
  portainer:
    command: -H unix:///var/run/docker.sock
    container_name: portainer
    environment:
      - TZ=${TZ}
    hostname: ${DOCKERHOSTNAME}
    image: portainer/portainer
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    ports:
      - ${PORTAINER_PORT_9000}:9000
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKERCONFDIR}/portainer:/data
  radarr:
    container_name: radarr
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    hostname: ${DOCKERHOSTNAME}
    image: ghcr.io/linuxserver/radarr
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    ports:
      - ${RADARR_PORT_7878}:7878
    restart: unless-stopped
    volumes:
      - ${DOCKERCONFDIR}/radarr:/config
      - ${DOWNLOADSDIR}:/downloads
      - ${MOVIESDIR}:/movies
  sonarr:
    container_name: sonarr
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    hostname: ${DOCKERHOSTNAME}
    image: ghcr.io/linuxserver/sonarr
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    ports:
      - ${SONARR_PORT_8989}:8989
    restart: unless-stopped
    volumes:
      - ${DOCKERCONFDIR}/sonarr:/config
      - ${DOWNLOADSDIR}:/downloads
      - ${TVDIR}:/tv
  ouroboros:
    container_name: ouroboros
    hostname: ouroboros
    image: pyouroboros/ouroboros
    environment:
      - CLEANUP=true
      - INTERVAL=300
      - LOG_LEVEL=info
      - SELF_UPDATE=true
      - TZ=${TZ}
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
